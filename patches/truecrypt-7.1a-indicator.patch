diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Build/Include/Makefile.inc truecrypt-7.1a-indicator/Build/Include/Makefile.inc
--- truecrypt-7.1a-source/Build/Include/Makefile.inc	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Build/Include/Makefile.inc	2013-06-17 01:34:00.429636758 +0200
@@ -10,7 +10,7 @@
 
 clean:
 	@echo Cleaning $(NAME)
-	rm -f $(APPNAME) $(NAME).a $(OBJS) $(OBJS:.o=.d) *.gch
+	rm -f $(APPNAME) $(NAME).a $(OBJS) $(OBJS:.o=.d) *.gch $(RESOURCES) SystemPrecompiled.d
 
 %.o: %.c
 	@echo Compiling $(<F)
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Main/Forms/MainFrame.cpp truecrypt-7.1a-indicator/Main/Forms/MainFrame.cpp
--- truecrypt-7.1a-source/Main/Forms/MainFrame.cpp	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Main/Forms/MainFrame.cpp	2013-06-25 01:16:30.606414472 +0200
@@ -37,6 +37,7 @@
 namespace TrueCrypt
 {
 	MainFrame::MainFrame (wxWindow* parent) : MainFrameBase (parent),
+		indicator (NULL),
 		ListItemRightClickEventPending (false),
 		SelectedItemIndex (-1),
 		SelectedSlotNumber (0),
@@ -1411,6 +1412,30 @@
 		}
 	}
 
+	void MainFrame::SetBusy (bool busy)
+	{
+		gtk_widget_set_sensitive(indicator_item_mountfavorites, !busy);
+		gtk_widget_set_sensitive(indicator_item_dismountall, !busy);
+		gtk_widget_set_sensitive(indicator_item_prefs, !busy);
+		gtk_widget_set_sensitive(indicator_item_exit, !busy /*&& CanExit()*/);
+	}
+
+	static void IndicatorOnShowHideMenuItemSelected (GtkWidget *widget, MainFrame *self) { Gui->SetBackgroundMode (!Gui->IsInBackgroundMode()); }
+	static void IndicatorOnMountAllFavoritesMenuItemSelected (GtkWidget *widget, MainFrame *self) { self->SetBusy(true); self->MountAllFavorites (); self->SetBusy(false); }
+	static void IndicatorOnDismountAllMenuItemSelected (GtkWidget *widget, MainFrame *self) { self->SetBusy(true); Gui->DismountAllVolumes(); self->SetBusy(false); }
+	static void IndicatorOnPreferencesMenuItemSelected (GtkWidget *widget, MainFrame *self) {
+		self->SetBusy(true);
+		PreferencesDialog dialog (self);
+		dialog.ShowModal();
+		self->SetBusy(false);
+	}
+	static void IndicatorOnExitMenuItemSelected (GtkWidget *widget, MainFrame *self) {
+		self->SetBusy(true);
+		if (Core->GetMountedVolumes().empty() || Gui->AskYesNo (LangString ["CONFIRM_EXIT"], false, true))
+			self->Close (true);
+		self->SetBusy(false);
+	}
+
 	void MainFrame::ShowTaskBarIcon (bool show)
 	{
 		if (!show && mTaskBarIcon->IsIconInstalled())
@@ -1420,8 +1445,43 @@
 		else if (show && !mTaskBarIcon->IsIconInstalled())
 		{
 #ifndef TC_MACOSX
-			mTaskBarIcon->SetIcon (Resources::GetTrueCryptIcon(), L"TrueCrypt");
+			//mTaskBarIcon->SetIcon (Resources::GetTrueCryptIcon(), L"TrueCrypt");
 #endif
+			if (indicator == NULL) {
+				indicator = app_indicator_new ("truecrypt", "truecrypt-indicator", APP_INDICATOR_CATEGORY_APPLICATION_STATUS);
+				app_indicator_set_status (indicator, APP_INDICATOR_STATUS_ACTIVE);
+
+				GtkWidget *menu = gtk_menu_new();
+
+				indicator_item_showhide = gtk_menu_item_new_with_label (LangString[Gui->IsInBackgroundMode() ? "SHOW_TC" : "HIDE_TC"].mb_str());
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_showhide);
+				g_signal_connect (indicator_item_showhide, "activate", G_CALLBACK (IndicatorOnShowHideMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_mountfavorites = gtk_menu_item_new_with_label ("Mount All Favorite Volumes");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_mountfavorites);
+				g_signal_connect (indicator_item_mountfavorites, "activate", G_CALLBACK (IndicatorOnMountAllFavoritesMenuItemSelected), this);
+
+				indicator_item_dismountall = gtk_menu_item_new_with_label ("Dismount All Mounted Volumes");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_dismountall);
+				g_signal_connect (indicator_item_dismountall, "activate", G_CALLBACK (IndicatorOnDismountAllMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_prefs = gtk_menu_item_new_with_label ("Preferences...");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_prefs);
+				g_signal_connect (indicator_item_prefs, "activate", G_CALLBACK (IndicatorOnPreferencesMenuItemSelected), this);
+
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), gtk_separator_menu_item_new());
+
+				indicator_item_exit = gtk_menu_item_new_with_label ("Exit");
+				gtk_menu_shell_append (GTK_MENU_SHELL (menu), indicator_item_exit);
+				g_signal_connect (indicator_item_exit, "activate", G_CALLBACK (IndicatorOnExitMenuItemSelected), this);
+
+				gtk_widget_show_all (menu);
+				app_indicator_set_menu (indicator, GTK_MENU (menu));
+			}
 		}
 	}
 
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Main/Forms/MainFrame.h truecrypt-7.1a-indicator/Main/Forms/MainFrame.h
--- truecrypt-7.1a-source/Main/Forms/MainFrame.h	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Main/Forms/MainFrame.h	2013-06-25 01:13:41.882411066 +0200
@@ -9,6 +9,10 @@
 #ifndef TC_HEADER_Main_Forms_MainFrame
 #define TC_HEADER_Main_Forms_MainFrame
 
+#define GSocket GlibGSocket
+#include <libappindicator/app-indicator.h>
+#undef GSocket
+ 
 #include "Forms.h"
 #include "ChangePasswordDialog.h"
 
@@ -27,6 +31,16 @@
 		static FilePath GetShowRequestFifoPath () { return Application::GetConfigFilePath (L".show-request-queue", true); }
 #endif
 
+		void MountAllFavorites ();
+
+		AppIndicator *indicator;
+		GtkWidget *indicator_item_showhide;
+		GtkWidget *indicator_item_mountfavorites;
+		GtkWidget *indicator_item_dismountall;
+		GtkWidget *indicator_item_prefs;
+		GtkWidget *indicator_item_exit;
+		void SetBusy (bool busy);
+
 	protected:
 		enum
 		{
@@ -60,7 +74,6 @@
 		void LoadFavoriteVolumes ();
 		void LoadPreferences ();
 		void MountAllDevices ();
-		void MountAllFavorites ();
 		void MountVolume ();
 		void OnAboutMenuItemSelected (wxCommandEvent& event);
 		void OnActivate (wxActivateEvent& event);
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Main/GraphicUserInterface.cpp truecrypt-7.1a-indicator/Main/GraphicUserInterface.cpp
--- truecrypt-7.1a-source/Main/GraphicUserInterface.cpp	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Main/GraphicUserInterface.cpp	2013-06-16 17:13:33.961382649 +0200
@@ -1250,19 +1250,19 @@
 			File backupFile;
 			backupFile.Open (*files.front(), File::OpenRead);
 
-			uint64 headerSize;
+			//uint64 headerSize;
 			bool legacyBackup;
 
 			// Determine the format of the backup file
 			switch (backupFile.Length())
 			{
 			case TC_VOLUME_HEADER_GROUP_SIZE:
-				headerSize = TC_VOLUME_HEADER_SIZE;
+				//headerSize = TC_VOLUME_HEADER_SIZE;
 				legacyBackup = false;
 				break;
 
 			case TC_VOLUME_HEADER_SIZE_LEGACY * 2:
-				headerSize = TC_VOLUME_HEADER_SIZE_LEGACY;
+				//headerSize = TC_VOLUME_HEADER_SIZE_LEGACY;
 				legacyBackup = true;
 				break;
 
@@ -1472,6 +1472,8 @@
 		}
 
 		BackgroundMode = state;
+
+		gtk_menu_item_set_label ((GtkMenuItem*) ((MainFrame*) mMainFrame)->indicator_item_showhide, LangString[Gui->IsInBackgroundMode() ? "SHOW_TC" : "HIDE_TC"].mb_str());
 	}
 
 	void GraphicUserInterface::SetListCtrlColumnWidths (wxListCtrl *listCtrl, list <int> columnWidthPermilles, bool hasVerticalScrollbar) const
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Main/Main.make truecrypt-7.1a-indicator/Main/Main.make
--- truecrypt-7.1a-source/Main/Main.make	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Main/Main.make	2013-06-16 16:08:56.677471799 +0200
@@ -105,7 +105,7 @@
 
 $(APPNAME): $(LIBS) $(OBJS)
 	@echo Linking $@
-	$(CXX) -o $(APPNAME) $(LFLAGS) $(OBJS) $(LIBS) $(FUSE_LIBS) $(WX_LIBS)
+	$(CXX) -o $(APPNAME) $(LFLAGS) $(OBJS) $(LIBS) $(FUSE_LIBS) $(WX_LIBS) -ldl $(shell pkg-config --libs appindicator-0.1)
 
 ifeq "$(TC_BUILD_CONFIG)" "Release"
 ifndef NOSTRIP
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Main/TextUserInterface.cpp truecrypt-7.1a-indicator/Main/TextUserInterface.cpp
--- truecrypt-7.1a-source/Main/TextUserInterface.cpp	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Main/TextUserInterface.cpp	2013-06-16 16:14:14.085464501 +0200
@@ -1371,19 +1371,19 @@
 			File backupFile;
 			backupFile.Open (filePath, File::OpenRead);
 
-			uint64 headerSize;
+			//uint64 headerSize;
 			bool legacyBackup;
 
 			// Determine the format of the backup file
 			switch (backupFile.Length())
 			{
 			case TC_VOLUME_HEADER_GROUP_SIZE:
-				headerSize = TC_VOLUME_HEADER_SIZE;
+				//headerSize = TC_VOLUME_HEADER_SIZE;
 				legacyBackup = false;
 				break;
 
 			case TC_VOLUME_HEADER_SIZE_LEGACY * 2:
-				headerSize = TC_VOLUME_HEADER_SIZE_LEGACY;
+				//headerSize = TC_VOLUME_HEADER_SIZE_LEGACY;
 				legacyBackup = true;
 				break;
 
diff -urN -xpkcs11 -xForms.cpp truecrypt-7.1a-source/Makefile truecrypt-7.1a-indicator/Makefile
--- truecrypt-7.1a-source/Makefile	2012-02-07 11:36:48.000000000 +0100
+++ truecrypt-7.1a-indicator/Makefile	2013-06-26 02:15:36.613069880 +0200
@@ -35,8 +35,8 @@
 export AS := nasm
 export RANLIB ?= ranlib
 
-export CFLAGS := -Wall
-export CXXFLAGS := -Wall -Wno-unused-parameter
+export CFLAGS := -Wall -Wno-sequence-point
+export CXXFLAGS := -Wall -Wno-unused-parameter -Wno-narrowing
 C_CXX_FLAGS := -MMD -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGE_FILES -I$(BASE_DIR) -I$(BASE_DIR)/Crypto
 export ASFLAGS := -Ox -D __GNUC__
 export LFLAGS :=
@@ -50,6 +50,9 @@
 export WXCONFIG_CXXFLAGS :=
 WX_ROOT ?= ..
 
+#export PKCS11_INC := $(BASE_DIR)/pkcs11
+
+C_CXX_FLAGS += $(shell pkg-config --cflags appindicator-0.1)
 
 export TC_BUILD_CONFIG := Release
 
